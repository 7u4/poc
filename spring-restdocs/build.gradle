plugins {
    id "java"

    id "org.springframework.boot" version "2.1.8.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"

    id "org.asciidoctor.convert" version "1.5.8"
}

sourceCompatibility = "12"

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/release"  }
}

ext {
    snippetsDir = file("build/generated-snippets")
}

ext["junit-jupiter.version"] = "5.5.1"
ext["rest-assured.version"] = "4.1.1"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.postgresql:postgresql"

    implementation "org.mapstruct:mapstruct:1.3.0.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.flywaydb:flyway-core"

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    testImplementation "com.h2database:h2"

    testImplementation "br.com.leonardoferreira:JBacon:2.0.1"
    testImplementation "com.github.javafaker:javafaker:1.0.0"
    testImplementation "io.rest-assured:rest-assured"

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }

    testImplementation "org.junit.jupiter:junit-jupiter"

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor"
    asciidoctor "io.spring.asciidoctor:spring-asciidoctor-extensions:0.1.3.RELEASE"
    testImplementation "org.springframework.restdocs:spring-restdocs-restassured"
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()

    doLast {
        asciidoctor.execute()
    }
}

asciidoctor {
    inputs.dir snippetsDir

    doLast {
        copyDocs.execute()
    }
}

task copyDocs(type: Copy) {
    from "${asciidoctor.outputDir}/html5"
    into "static/docs"
}

